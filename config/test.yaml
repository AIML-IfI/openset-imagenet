# General Parameters
name: experiment
checkpoint:             # Relative path to checkpoint
log_name: training.log  # name of the file with training info
train_mode: train       # either: {train, finetune}
gpu:                    # index of a GPU, if available
parallel: off           # run in parallel

# Data Parameters
data:
  imagenet_path: /local/scratch/datasets/ImageNet/ILSVRC2012/ # ILSVRC2012 path
  train_file: protocols/p{}_train.csv        # relative to data directory
  val_file:   protocols/p{}_val.csv          # relative to data directory
#  test_file:  protocols/p{}_test.csv         # relative to data directory

# Common parameters
seed: 42        # Common seed across all source of randomness
batch_size: 64  # If distributed training the batch size is multiplied by the number of gpus
epochs: 10
workers: 4      # Dataloader number of workers
patience: 0     # Number of epochs to wait before stopping the training. 0 means no early stopping

loss:
  type: softmax  # either {entropic, softmax, garbage}
  # Entropic Parameters
  w: 1.

# Optimizer Parameters
opt:
  type: adam  # Two options: {adam, sgd}
  lr: 1.e-3   # Initial learning rate
  decay: 0    # Number of epochs to wait for each learning rate reduction. 0 means no decay
  gamma: 1    # Factor to reduce the learning rate

# Parameters for Distributed Data Parallel training
dist:
  distributed: True  # False to use only one GPU # TODO: delete this option
  gpus: 2            # Number of GPUS to use
  port: "8889"       # Default port to communicate.

#openset algorithms
alg: OpenMax  #OpenMax EVM

#dnn_features: '/home/user/halil/master-suter/code/eosa/eosa/experiments/results/models/p1_traincls(kk)_baseline_resnet50_feature_df512_e200_optAdam(0.001+0.7+0.999).pth'

#DNN model to use
dnn_features: "experiments/Protocol_1/softmax_best.pth"

hyp:
        tailsize: [1]
        distance_multiplier: [1.5]
        translateAmount: [1]
        distance_metric: cosine
        alpha: [10]


evm_parameters:
        tailsize: [10]
        cover_threshold: [1]
        distance_multiplier: [1.5]
        distance_metric: cosine
        chunk_size: 100
train_classes: [kk]

known_unknown_target: -1
unknown_unknown_target: -2

suffix: _best #or _cur


